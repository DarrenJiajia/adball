#!/bin/bash
# Copyright (C) 2012 D.Furiya
# 
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

version="1.0.1"
 
#####
# Function Definition
#####
function versionInfo() {
    echo ""
    echo "Adb All devices installer Version $version"
    echo ""
}
function commandInfo() {
    versionInfo
    echo "device commands:"
    echo "  adball install [apkfile]"
    echo "                - push this package file to all devices and install those"
    echo "  adball uninstall [apkfile]"
    echo "                - remove this app package from all devices"
    echo "  adball push <local> <remote>"
    echo "                - copy file/dir to all devices"
    echo "  adball pull <remote> <local>"
    echo "                - copy file/dir from all devices"
    echo ""
}
# All device install Command
function installCmd() {

    if [ ${argc} -ne 2 ];
    then
        commandInfo
        status=1
        exit $status
    fi

    curNum=0
    deviceNum=${#deviceList[@]}
    for target in ${deviceList[@]}
    do
        echo Being installed... $((curNum+1))/$((deviceNum))
        echo "adb -s ${target} ${command} -r ${apkfile}"
        adb -s ${target} ${command} -r ${apkfile}
        echo ""
        curNum=$((curNum+1))
    done
}
# All device uninstall Command
function uninstallCmd() {

    if [ ${argc} -ne 2 ];
    then
        commandInfo
        status=1
        exit $status
    fi

    packageName=$(aapt dump badging ${apkfile}|grep package|awk '{print $2}'|awk -F"'" '{print $2}')
    curNum=0
    deviceNum=${#deviceList[@]}
    for target in ${deviceList[@]}
    do
        echo Being uninstalled... $((curNum+1))/$((deviceNum))
        echo "adb -s ${target} ${command} ${packageName}"
        adb -s ${target} ${command} ${packageName}
        echo ""
        curNum=$((curNum+1))
    done
}
# All device push/pull Command
function pushpullCmd() {

    if [ ${argc} -ne 3 ];
    then
        commandInfo
        status=1
        exit $status
    fi

    curNum=0
    deviceNum=${#deviceList[@]}
    for target in ${deviceList[@]}
    do
        echo Being ${command}ed... $((curNum+1))/$((deviceNum))
        echo "adb -s ${target} ${command} ${srcfile} ${dstfile}"
        adb -s ${target} ${command} ${srcfile} ${dstfile}
        echo ""
        curNum=$((curNum+1))
    done
}
#####

status=0
IFS=$'\n'
argc=$#
command=$1
apkfile=$2
srcfile=$2
dstfile=$3
deviceList=$(adb devices|grep -v List|awk '{print $1}')

which adb > /dev/null 2>&1
if [ $? -ne 0 ];
then
    echo "adb is not found"
    echo ""
    status=1
    exit $status
fi

if [ ${#deviceList[@]} -eq 0 ];
then
    echo "Error: Device not found"
    status=1
    exit $status
fi

case ${command} in
    "install")
        installCmd
        status=0
    ;;
    "uninstall")
        uninstallCmd
        status=0
    ;;
    "push")
        pushpullCmd
        status=0
    ;;
    "pull")
        pushpullCmd
        status=0
    ;;
    "help")
        commandInfo
        status=0
    ;;
    "version")
        versionInfo
        status=0
    ;;
    *)
        commandInfo
        status=1
    ;;
esac

exit $status